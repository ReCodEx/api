openapi: 3.0.0
info:
  title: 'ReCodEx API'
  version: '1.0'
paths:
  /v1/security/check:
    post:
      operationId: securityPresenterActionCheck
      requestBody:
        content:
          application/json:
            schema:
              required:
                - url
                - method
              properties:
                url:
                  description: 'URL of the resource that we are checking'
                  type: string
                  nullable: true
                method:
                  description: 'The HTTP method'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/login:
    post:
      summary: 'Log in using user credentials'
      description: 'Log in using user credentials'
      operationId: loginPresenterActionDefault
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  description: "User's E-mail"
                  type: string
                  minLength: 1
                  example: name@domain.tld
                  nullable: false
                password:
                  description: Password
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/login/refresh:
    post:
      summary: 'Refresh the access token of current user'
      description: 'Refresh the access token of current user'
      operationId: loginPresenterActionRefresh
      responses:
        '200':
          description: 'Placeholder response'
  /v1/login/issue-restricted-token:
    post:
      summary: 'Issue a new access token with a restricted set of scopes'
      description: 'Issue a new access token with a restricted set of scopes'
      operationId: loginPresenterActionIssueRestrictedToken
      requestBody:
        content:
          application/json:
            schema:
              required:
                - scopes
              properties:
                effectiveRole:
                  description: 'Effective user role contained within issued token'
                  type: string
                  example: text
                  nullable: false
                scopes:
                  description: 'A list of requested scopes'
                  type: array
                  items: {  }
                  nullable: false
                expiration:
                  description: 'How long should the token be valid (in seconds)'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/login/takeover/{userId}':
    post:
      summary: 'Takeover user account with specified user identification.'
      description: 'Takeover user account with specified user identification.'
      operationId: loginPresenterActionTakeOver
      parameters:
        -
          name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/login/{authenticatorName}':
    post:
      summary: 'Log in using an external authentication service'
      description: 'Log in using an external authentication service'
      operationId: loginPresenterActionExternal
      parameters:
        -
          name: authenticatorName
          in: path
          description: 'Identifier of the external authenticator'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              properties:
                token:
                  description: 'JWT external authentication token'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/broker/stats:
    get:
      summary: 'Get current statistics from broker.'
      description: 'Get current statistics from broker.'
      operationId: brokerPresenterActionStats
      responses:
        '200':
          description: 'Placeholder response'
  /v1/broker/freeze:
    post:
      summary: 'Freeze broker and its execution.'
      description: 'Freeze broker and its execution.'
      operationId: brokerPresenterActionFreeze
      responses:
        '200':
          description: 'Placeholder response'
  /v1/broker/unfreeze:
    post:
      summary: 'Unfreeze broker and its execution.'
      description: 'Unfreeze broker and its execution.'
      operationId: brokerPresenterActionUnfreeze
      responses:
        '200':
          description: 'Placeholder response'
  /v1/broker-reports/error:
    post:
      summary: 'Announce a backend error that is not related to any job (meant to be called by the backend)'
      description: 'Announce a backend error that is not related to any job (meant to be called by the backend)'
      operationId: brokerReportsPresenterActionError
      requestBody:
        content:
          application/json:
            schema:
              required:
                - message
              properties:
                message:
                  description: 'A textual description of the error'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/broker-reports/job-status/{jobId}':
    post:
      summary: 'Update the status of a job (meant to be called by the backend)'
      description: 'Update the status of a job (meant to be called by the backend)'
      operationId: brokerReportsPresenterActionJobStatus
      parameters:
        -
          name: jobId
          in: path
          description: 'Identifier of the job whose status is being reported'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - status
              properties:
                status:
                  description: 'The new status of the job'
                  type: string
                  nullable: true
                message:
                  description: 'A textual explanation of the status change'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/comments/{id}':
    get:
      summary: 'Get a comment thread'
      description: 'Get a comment thread'
      operationId: commentsPresenterActionDefault
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the comment thread'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Add a comment to a thread'
      description: 'Add a comment to a thread'
      operationId: commentsPresenterActionAddComment
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the comment thread'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              properties:
                text:
                  description: 'Text of the comment'
                  type: string
                  maxLength: 65535
                  minLength: 1
                  example: text
                  nullable: false
                isPrivate:
                  description: 'True if the comment is private'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/comments/{threadId}/comment/{commentId}/toggle':
    post:
      summary: 'Make a private comment public or vice versa'
      description: 'Make a private comment public or vice versa'
      operationId: commentsPresenterActionTogglePrivate
      parameters:
        -
          name: threadId
          in: path
          description: 'Identifier of the comment thread'
          required: true
          schema:
            type: string
            nullable: false
        -
          name: commentId
          in: path
          description: 'Identifier of the comment'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/comments/{threadId}/comment/{commentId}/private':
    post:
      summary: 'Set the private flag of a comment'
      description: 'Set the private flag of a comment'
      operationId: commentsPresenterActionSetPrivate
      parameters:
        -
          name: threadId
          in: path
          description: 'Identifier of the comment thread'
          required: true
          schema:
            type: string
            nullable: false
        -
          name: commentId
          in: path
          description: 'Identifier of the comment'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - isPrivate
              properties:
                isPrivate:
                  description: 'True if the comment is private'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/comments/{threadId}/comment/{commentId}':
    delete:
      summary: 'Delete a comment'
      description: 'Delete a comment'
      operationId: commentsPresenterActionDelete
      parameters:
        -
          name: threadId
          in: path
          description: 'Identifier of the comment thread'
          required: true
          schema:
            type: string
            nullable: false
        -
          name: commentId
          in: path
          description: 'Identifier of the comment'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercises:
    get:
      summary: 'Get a list of all exercises matching given filters in given pagination rage. The result conforms to pagination protocol.'
      description: 'Get a list of all exercises matching given filters in given pagination rage. The result conforms to pagination protocol.'
      operationId: exercisesPresenterActionDefault
      parameters:
        -
          name: offset
          in: query
          description: 'Index of the first result.'
          required: false
          schema:
            type: integer
            nullable: false
        -
          name: limit
          in: query
          description: 'Maximal number of results returned.'
          required: false
          schema:
            type: integer
            nullable: true
        -
          name: orderBy
          in: query
          description: "Name of the column (column concept). The '!' prefix indicate descending order."
          required: false
          schema:
            type: string
            nullable: true
        -
          name: filters
          in: query
          description: 'Named filters that prune the result.'
          required: false
          schema:
            type: array
            items: {  }
            nullable: true
        -
          name: locale
          in: query
          description: 'Currently set locale (used to augment order by clause if necessary),'
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create exercise with all default values. Exercise detail can be then changed in appropriate endpoint.'
      description: 'Create exercise with all default values. Exercise detail can be then changed in appropriate endpoint.'
      operationId: exercisesPresenterActionCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupId
              properties:
                groupId:
                  description: 'Identifier of the group to which exercise belongs to'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercises/list:
    post:
      summary: 'Get a list of exercises based on given ids.'
      description: 'Get a list of exercises based on given ids.'
      operationId: exercisesPresenterActionListByIds
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ids
              properties:
                ids:
                  description: 'Identifications of exercises'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercises/authors:
    get:
      summary: 'List authors of all exercises, possibly filtered by a group in which the exercises appear.'
      description: 'List authors of all exercises, possibly filtered by a group in which the exercises appear.'
      operationId: exercisesPresenterActionAuthors
      parameters:
        -
          name: instanceId
          in: query
          description: 'Id of an instance from which the authors are listed.'
          required: false
          schema:
            type: string
            nullable: false
        -
          name: groupId
          in: query
          description: 'A group where the relevant exercises can be seen (assigned).'
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercises/tags:
    get:
      summary: 'Get list of global exercise tag names which are currently registered.'
      description: 'Get list of global exercise tag names which are currently registered.'
      operationId: exercisesPresenterActionAllTags
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercises/tags-stats:
    get:
      summary: 'Get list of global exercise tag names along with how many times they have been used.'
      description: 'Get list of global exercise tag names along with how many times they have been used.'
      operationId: exercisesPresenterActionTagsStats
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/tags/{tag}':
    post:
      summary: "Update the tag globally. At the moment, the only 'update' function is 'rename'. Other types of updates may be implemented in the future."
      description: "Update the tag globally. At the moment, the only 'update' function is 'rename'. Other types of updates may be implemented in the future."
      operationId: exercisesPresenterActionTagsUpdateGlobal
      parameters:
        -
          name: tag
          in: path
          description: 'Tag to be updated'
          required: true
          schema:
            type: string
            nullable: false
        -
          name: renameTo
          in: query
          description: 'New name of the tag'
          required: false
          schema:
            type: string
            maxLength: 32
            minLength: 1
            nullable: false
        -
          name: force
          in: query
          description: 'If true, the rename will be allowed even if the new tag name exists (tags will be merged). Otherwise, name collisions will result in error.'
          required: false
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}':
    get:
      summary: 'Get details of an exercise'
      description: 'Get details of an exercise'
      operationId: exercisesPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update detail of an exercise'
      description: 'Update detail of an exercise'
      operationId: exercisesPresenterActionUpdateDetail
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
                - difficulty
                - localizedTexts
                - solutionFilesLimit
                - solutionSizeLimit
                - mergeJudgeLogs
              properties:
                version:
                  description: 'Version of the edited exercise'
                  type: integer
                  example: '0'
                  nullable: false
                difficulty:
                  description: "Difficulty of an exercise, should be one of 'easy', 'medium' or 'hard'"
                  type: string
                  nullable: true
                localizedTexts:
                  description: 'A description of the exercise'
                  type: array
                  items: {  }
                  nullable: false
                isPublic:
                  description: 'Exercise can be public or private'
                  type: boolean
                  example: 'true'
                  nullable: false
                isLocked:
                  description: 'If true, the exercise cannot be assigned'
                  type: boolean
                  example: 'true'
                  nullable: false
                configurationType:
                  description: 'Identifies the way the evaluation of the exercise is configured'
                  type: string
                  example: text
                  nullable: false
                solutionFilesLimit:
                  description: 'Maximal number of files in a solution being submitted (default for assignments)'
                  type: integer
                  example: '0'
                  nullable: true
                solutionSizeLimit:
                  description: 'Maximal size (bytes) of all files in a solution being submitted (default for assignments)'
                  type: integer
                  example: '0'
                  nullable: true
                mergeJudgeLogs:
                  description: 'If true, judge stderr will be merged into stdout (default for assignments)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete an exercise'
      description: 'Delete an exercise'
      operationId: exercisesPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/validate':
    post:
      summary: 'Check if the version of the exercise is up-to-date.'
      description: 'Check if the version of the exercise is up-to-date.'
      operationId: exercisesPresenterActionValidate
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
              properties:
                version:
                  description: 'Version of the exercise.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/fork':
    post:
      summary: 'Fork exercise from given one into the completely new one.'
      description: 'Fork exercise from given one into the completely new one.'
      operationId: exercisesPresenterActionForkFrom
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupId
              properties:
                groupId:
                  description: 'Identifier of the group to which exercise will be forked'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/assignments':
    get:
      summary: 'Get all non-archived assignments created from this exercise.'
      description: 'Get all non-archived assignments created from this exercise.'
      operationId: exercisesPresenterActionAssignments
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: archived
          in: query
          description: 'Include also archived groups in the result'
          required: false
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/hardware-groups':
    post:
      summary: 'Set hardware groups which are associated with exercise.'
      description: 'Set hardware groups which are associated with exercise.'
      operationId: exercisesPresenterActionHardwareGroups
      parameters:
        -
          name: id
          in: path
          description: 'identifier of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - hwGroups
              properties:
                hwGroups:
                  description: 'List of hardware groups identifications to which exercise belongs to'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/groups/{groupId}':
    post:
      summary: 'Attach exercise to group with given identification.'
      description: 'Attach exercise to group with given identification.'
      operationId: exercisesPresenterActionAttachGroup
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: groupId
          in: path
          description: 'Identifier of the group to which exercise should be attached'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Detach exercise from given group.'
      description: 'Detach exercise from given group.'
      operationId: exercisesPresenterActionDetachGroup
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: groupId
          in: path
          description: 'Identifier of the group which should be detached from exercise'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/tags/{name}':
    post:
      summary: 'Add tag with given name to the exercise.'
      description: 'Add tag with given name to the exercise.'
      operationId: exercisesPresenterActionAddTag
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: name
          in: path
          description: 'Name of the newly added tag to given exercise'
          required: true
          schema:
            type: string
            maxLength: 32
            minLength: 1
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove tag with given name from exercise.'
      description: 'Remove tag with given name from exercise.'
      operationId: exercisesPresenterActionRemoveTag
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: name
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/archived':
    post:
      summary: '(Un)mark the exercise as archived. Nothing happens if the exercise is already in the requested state.'
      description: '(Un)mark the exercise as archived. Nothing happens if the exercise is already in the requested state.'
      operationId: exercisesPresenterActionSetArchived
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - archived
              properties:
                archived:
                  description: 'Whether the exercise should be marked or unmarked'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/author':
    post:
      summary: 'Change the author of the exercise. This is a very special operation reserved for powerful users.'
      description: 'Change the author of the exercise. This is a very special operation reserved for powerful users.'
      operationId: exercisesPresenterActionSetAuthor
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - author
              properties:
                author:
                  description: 'Id of the new author of the exercise.'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/admins':
    post:
      summary: 'Change who the admins of an exercise are (all users on the list are added, prior admins not on the list are removed).'
      description: 'Change who the admins of an exercise are (all users on the list are added, prior admins not on the list are removed).'
      operationId: exercisesPresenterActionSetAdmins
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - admins
              properties:
                admins:
                  description: 'List of user IDs.'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/notification':
    post:
      summary: 'Sends an email to all group admins and supervisors, where the exercise is assigned. The purpose of this is to quickly notify all relevant teachers when a bug is found or the exercise is modified significantly. The response is number of emails sent (number of notified users).'
      description: 'Sends an email to all group admins and supervisors, where the exercise is assigned. The purpose of this is to quickly notify all relevant teachers when a bug is found or the exercise is modified significantly. The response is number of emails sent (number of notified users).'
      operationId: exercisesPresenterActionSendNotification
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - message
              properties:
                message:
                  description: 'Message sent to notified users.'
                  type: string
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/supplementary-files':
    get:
      summary: 'Get list of all supplementary files for an exercise'
      description: 'Get list of all supplementary files for an exercise'
      operationId: exerciseFilesPresenterActionGetSupplementaryFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Associate supplementary files with an exercise and upload them to remote file server'
      description: 'Associate supplementary files with an exercise and upload them to remote file server'
      operationId: exerciseFilesPresenterActionUploadSupplementaryFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  description: 'Identifiers of supplementary files'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/supplementary-files/{fileId}':
    delete:
      summary: 'Delete supplementary exercise file with given id'
      description: 'Delete supplementary exercise file with given id'
      operationId: exerciseFilesPresenterActionDeleteSupplementaryFile
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: fileId
          in: path
          description: 'identification of file'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/supplementary-files/download-archive':
    get:
      summary: 'Download archive containing all supplementary files for exercise.'
      description: 'Download archive containing all supplementary files for exercise.'
      operationId: exerciseFilesPresenterActionDownloadSupplementaryFilesArchive
      parameters:
        -
          name: id
          in: path
          description: 'of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/attachment-files':
    get:
      summary: 'Get a list of all attachment files for an exercise'
      description: 'Get a list of all attachment files for an exercise'
      operationId: exerciseFilesPresenterActionGetAttachmentFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Associate attachment exercise files with an exercise'
      description: 'Associate attachment exercise files with an exercise'
      operationId: exerciseFilesPresenterActionUploadAttachmentFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  description: 'Identifiers of attachment files'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/attachment-files/{fileId}':
    delete:
      summary: 'Delete attachment exercise file with given id'
      description: 'Delete attachment exercise file with given id'
      operationId: exerciseFilesPresenterActionDeleteAttachmentFile
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: fileId
          in: path
          description: 'identification of file'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/attachment-files/download-archive':
    get:
      summary: 'Download archive containing all attachment files for exercise.'
      description: 'Download archive containing all attachment files for exercise.'
      operationId: exerciseFilesPresenterActionDownloadAttachmentFilesArchive
      parameters:
        -
          name: id
          in: path
          description: 'of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/tests':
    get:
      summary: 'Get tests for exercise based on given identification.'
      description: 'Get tests for exercise based on given identification.'
      operationId: exercisesConfigPresenterActionGetTests
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Set tests for exercise based on given identification.'
      description: 'Set tests for exercise based on given identification.'
      operationId: exercisesConfigPresenterActionSetTests
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tests
              properties:
                tests:
                  description: 'An array of tests which will belong to exercise'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/environment-configs':
    get:
      summary: 'Get runtime configurations for exercise.'
      description: 'Get runtime configurations for exercise.'
      operationId: exercisesConfigPresenterActionGetEnvironmentConfigs
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Change runtime configuration of exercise. Configurations can be added or deleted here, based on what is provided in arguments.'
      description: 'Change runtime configuration of exercise. Configurations can be added or deleted here, based on what is provided in arguments.'
      operationId: exercisesConfigPresenterActionUpdateEnvironmentConfigs
      parameters:
        -
          name: id
          in: path
          description: 'identification of exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - environmentConfigs
              properties:
                environmentConfigs:
                  description: 'Environment configurations for the exercise'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/config':
    get:
      summary: 'Get a basic exercise high level configuration.'
      description: 'Get a basic exercise high level configuration.'
      operationId: exercisesConfigPresenterActionGetConfiguration
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Set basic exercise configuration'
      description: 'Set basic exercise configuration'
      operationId: exercisesConfigPresenterActionSetConfiguration
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  description: 'A list of basic high level exercise configuration'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/config/variables':
    post:
      summary: 'Get variables for exercise configuration which are derived from given pipelines and runtime environment.'
      description: 'Get variables for exercise configuration which are derived from given pipelines and runtime environment.'
      operationId: exercisesConfigPresenterActionGetVariablesForExerciseConfig
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - pipelinesIds
              properties:
                runtimeEnvironmentId:
                  description: 'Environment identifier'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                pipelinesIds:
                  description: 'Identifiers of selected pipelines for one test'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/environment/{runtimeEnvironmentId}/hwgroup/{hwGroupId}/limits':
    get:
      summary: 'Get a description of resource limits for an exercise for given hwgroup.'
      description: 'Get a description of resource limits for an exercise for given hwgroup.'
      operationId: exercisesConfigPresenterActionGetHardwareGroupLimits
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: runtimeEnvironmentId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: hwGroupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Set resource limits for an exercise for given hwgroup.'
      description: 'Set resource limits for an exercise for given hwgroup.'
      operationId: exercisesConfigPresenterActionSetHardwareGroupLimits
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: runtimeEnvironmentId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: hwGroupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - limits
              properties:
                limits:
                  description: 'A list of resource limits for the given environment and hardware group'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove resource limits of given hwgroup from an exercise.'
      description: 'Remove resource limits of given hwgroup from an exercise.'
      operationId: exercisesConfigPresenterActionRemoveHardwareGroupLimits
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: runtimeEnvironmentId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: hwGroupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/limits':
    get:
      summary: 'Get a description of resource limits for given exercise (all hwgroups all environments).'
      description: 'Get a description of resource limits for given exercise (all hwgroups all environments).'
      operationId: exercisesConfigPresenterActionGetLimits
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update resource limits for given exercise. If limits for particular hwGroup or environment are not posted, no change occurs. If limits for particular hwGroup or environment are posted as null, they are removed.'
      description: 'Update resource limits for given exercise. If limits for particular hwGroup or environment are not posted, no change occurs. If limits for particular hwGroup or environment are posted as null, they are removed.'
      operationId: exercisesConfigPresenterActionSetLimits
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - limits
              properties:
                limits:
                  description: 'A list of resource limits in the same format as getLimits endpoint yields.'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercises/{id}/score-config':
    get:
      summary: 'Get score configuration for exercise based on given identification.'
      description: 'Get score configuration for exercise based on given identification.'
      operationId: exercisesConfigPresenterActionGetScoreConfig
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Set score configuration for exercise.'
      description: 'Set score configuration for exercise.'
      operationId: exercisesConfigPresenterActionSetScoreConfig
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - scoreCalculator
                - scoreConfig
              properties:
                scoreCalculator:
                  description: 'ID of the score calculator'
                  type: string
                  example: text
                  nullable: false
                scoreConfig:
                  description: 'A configuration of the score calculator (the format depends on the calculator type)'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/exercise-assignments:
    post:
      summary: 'Assign an exercise to a group'
      description: 'Assign an exercise to a group'
      operationId: assignmentsPresenterActionCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - exerciseId
                - groupId
              properties:
                exerciseId:
                  description: 'Identifier of the exercise'
                  type: string
                  nullable: true
                groupId:
                  description: 'Identifier of the group'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}':
    get:
      summary: 'Get details of an assignment'
      description: 'Get details of an assignment'
      operationId: assignmentsPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update details of an assignment'
      description: 'Update details of an assignment'
      operationId: assignmentsPresenterActionUpdateDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the updated assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
                - isPublic
                - localizedTexts
                - firstDeadline
                - maxPointsBeforeFirstDeadline
                - submissionsCountLimit
                - solutionFilesLimit
                - solutionSizeLimit
                - allowSecondDeadline
                - canViewLimitRatios
                - canViewMeasuredValues
                - canViewJudgeStdout
                - canViewJudgeStderr
                - maxPointsDeadlineInterpolation
                - isBonus
              properties:
                version:
                  description: 'Version of the edited assignment'
                  type: integer
                  example: '0'
                  nullable: false
                isPublic:
                  description: 'Is the assignment ready to be displayed to students?'
                  type: boolean
                  example: 'true'
                  nullable: false
                localizedTexts:
                  description: 'A description of the assignment'
                  type: array
                  items: {  }
                  nullable: false
                firstDeadline:
                  description: 'First deadline for submission of the assignment'
                  type: integer
                  example: '1740135333'
                  nullable: false
                maxPointsBeforeFirstDeadline:
                  description: 'A maximum of points that can be awarded for a submission before first deadline'
                  type: integer
                  example: '0'
                  nullable: false
                submissionsCountLimit:
                  description: 'A maximum amount of submissions by a student for the assignment'
                  type: integer
                  example: '0'
                  nullable: false
                solutionFilesLimit:
                  description: 'Maximal number of files in a solution being submitted'
                  type: integer
                  example: '0'
                  nullable: true
                solutionSizeLimit:
                  description: 'Maximal size (bytes) of all files in a solution being submitted'
                  type: integer
                  example: '0'
                  nullable: true
                allowSecondDeadline:
                  description: "Should there be a second deadline for students who didn't make the first one?"
                  type: boolean
                  example: 'true'
                  nullable: false
                visibleFrom:
                  description: 'Date from which this assignment will be visible to students'
                  type: integer
                  example: '1740135333'
                  nullable: false
                canViewLimitRatios:
                  description: 'Can all users view ratio of theirs solution memory and time usages and assignment limits?'
                  type: boolean
                  example: 'true'
                  nullable: false
                canViewMeasuredValues:
                  description: 'Can all users view absolute memory and time values?'
                  type: boolean
                  example: 'true'
                  nullable: false
                canViewJudgeStdout:
                  description: 'Can all users view judge primary log (stdout) of theirs solution?'
                  type: boolean
                  example: 'true'
                  nullable: false
                canViewJudgeStderr:
                  description: 'Can all users view judge secondary log (stderr) of theirs solution?'
                  type: boolean
                  example: 'true'
                  nullable: false
                secondDeadline:
                  description: 'A second deadline for submission of the assignment (with different point award)'
                  type: integer
                  example: '1740135333'
                  nullable: false
                maxPointsBeforeSecondDeadline:
                  description: 'A maximum of points that can be awarded for a late submission'
                  type: integer
                  example: '0'
                  nullable: false
                maxPointsDeadlineInterpolation:
                  description: 'Use linear interpolation for max. points between 1st and 2nd deadline'
                  type: boolean
                  example: 'true'
                  nullable: false
                isBonus:
                  description: 'If true, points from this exercise will not be included in overall score of group'
                  type: boolean
                  example: 'true'
                  nullable: false
                pointsPercentualThreshold:
                  description: 'A minimum percentage of points needed to gain point from assignment'
                  type: number
                  example: '0.1'
                  nullable: false
                disabledRuntimeEnvironmentIds:
                  description: 'Identifiers of runtime environments that should not be used for student submissions'
                  type: array
                  items: {  }
                  nullable: false
                sendNotification:
                  description: 'If email notification (when assignment becomes public) should be sent'
                  type: boolean
                  example: 'true'
                  nullable: false
                isExam:
                  description: 'This assignment is dedicated for an exam (should be solved in exam mode)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete an assignment'
      description: 'Delete an assignment'
      operationId: assignmentsPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment to be removed'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/solutions':
    get:
      summary: 'Get a list of solutions of all users for the assignment'
      description: 'Get a list of solutions of all users for the assignment'
      operationId: assignmentsPresenterActionSolutions
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/best-solutions':
    get:
      summary: 'Get the best solutions to an assignment for all students in group.'
      description: 'Get the best solutions to an assignment for all students in group.'
      operationId: assignmentsPresenterActionBestSolutions
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/download-best-solutions':
    get:
      summary: 'Download the best solutions of an assignment for all students in group.'
      description: 'Download the best solutions of an assignment for all students in group.'
      operationId: assignmentsPresenterActionDownloadBestSolutionsArchive
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/users/{userId}/solutions':
    get:
      summary: 'Get a list of solutions created by a user of an assignment'
      description: 'Get a list of solutions created by a user of an assignment'
      operationId: assignmentsPresenterActionUserSolutions
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/users/{userId}/best-solution':
    get:
      summary: 'Get the best solution by a user to an assignment'
      description: 'Get the best solution by a user to an assignment'
      operationId: assignmentsPresenterActionBestSolution
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/validate':
    post:
      summary: 'Check if the version of the assignment is up-to-date.'
      description: 'Check if the version of the assignment is up-to-date.'
      operationId: assignmentsPresenterActionValidate
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
              properties:
                version:
                  description: 'Version of the assignment.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/sync-exercise':
    post:
      summary: 'Update the assignment so that it matches with the current version of the exercise (limits, texts, etc.)'
      description: 'Update the assignment so that it matches with the current version of the exercise (limits, texts, etc.)'
      operationId: assignmentsPresenterActionSyncWithExercise
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment that should be synchronized'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/can-submit':
    get:
      summary: 'Check if the given user can submit solutions to the assignment'
      description: 'Check if the given user can submit solutions to the assignment'
      operationId: submitPresenterActionCanSubmit
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: query
          description: 'Identification of the user'
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/submit':
    post:
      summary: 'Submit a solution of an assignment'
      description: 'Submit a solution of an assignment'
      operationId: submitPresenterActionSubmit
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - note
                - files
                - runtimeEnvironmentId
              properties:
                note:
                  description: 'A note by the author of the solution'
                  type: string
                  maxLength: 1024
                  example: text
                  nullable: false
                userId:
                  description: 'Author of the submission'
                  type: string
                  nullable: true
                files:
                  description: 'Submitted files'
                  type: string
                  nullable: true
                runtimeEnvironmentId:
                  description: 'Identifier of the runtime environment used for evaluation'
                  type: string
                  nullable: true
                solutionParams:
                  description: 'Solution parameters'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/resubmit-all':
    get:
      summary: 'Return a list of all pending resubmit async jobs associated with given assignment. Under normal circumstances, the list should be either empty, or contain only one job.'
      description: 'Return a list of all pending resubmit async jobs associated with given assignment. Under normal circumstances, the list should be either empty, or contain only one job.'
      operationId: submitPresenterActionResubmitAllAsyncJobStatus
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Start async job that resubmits all submissions of an assignment. No job is started when there are pending resubmit jobs for the selected assignment. Returns list of pending async jobs (same as GET call)'
      description: 'Start async job that resubmits all submissions of an assignment. No job is started when there are pending resubmit jobs for the selected assignment. Returns list of pending async jobs (same as GET call)'
      operationId: submitPresenterActionResubmitAll
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/pre-submit':
    post:
      summary: 'Pre submit action which will, based on given files, detect possible runtime environments for the assignment. Also it can be further used for entry points and other important things that should be provided by user during submit.'
      description: 'Pre submit action which will, based on given files, detect possible runtime environments for the assignment. Also it can be further used for entry points and other important things that should be provided by user during submit.'
      operationId: submitPresenterActionPreSubmit
      parameters:
        -
          name: id
          in: path
          description: 'identifier of assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: query
          description: 'Identifier of the submission author'
          required: false
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  description: ''
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/exercise-assignments/{id}/async-jobs':
    get:
      summary: 'Get all pending async jobs related to a particular assignment.'
      description: 'Get all pending async jobs related to a particular assignment.'
      operationId: asyncJobsPresenterActionAssignmentJobs
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/groups:
    get:
      summary: 'Get a list of all non-archived groups a user can see. The return set is filtered by parameters.'
      description: 'Get a list of all non-archived groups a user can see. The return set is filtered by parameters.'
      operationId: groupsPresenterActionDefault
      parameters:
        -
          name: instanceId
          in: query
          description: 'Only groups of this instance are returned.'
          required: false
          schema:
            type: string
            nullable: true
        -
          name: ancestors
          in: query
          description: 'If true, returns an ancestral closure of the initial result set. Included ancestral groups do not respect other filters (archived, search, ...).'
          required: false
          schema:
            type: boolean
            nullable: false
        -
          name: search
          in: query
          description: 'Search string. Only groups containing this string as a substring of their names are returned.'
          required: false
          schema:
            type: string
            nullable: true
        -
          name: archived
          in: query
          description: 'Include also archived groups in the result.'
          required: false
          schema:
            type: boolean
            nullable: false
        -
          name: onlyArchived
          in: query
          description: 'Automatically implies $archived flag and returns only archived groups.'
          required: false
          schema:
            type: boolean
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a new group'
      description: 'Create a new group'
      operationId: groupsPresenterActionAddGroup
      requestBody:
        content:
          application/json:
            schema:
              required:
                - instanceId
              properties:
                instanceId:
                  description: 'An identifier of the instance where the group should be created'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
                externalId:
                  description: 'An informative, human readable identifier of the group'
                  type: string
                  nullable: true
                parentGroupId:
                  description: 'Identifier of the parent group (if none is given, a top-level group is created)'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
                publicStats:
                  description: "Should students be able to see each other's results?"
                  type: boolean
                  example: 'true'
                  nullable: false
                detaining:
                  description: 'Are students prevented from leaving the group on their own?'
                  type: boolean
                  example: 'true'
                  nullable: false
                isPublic:
                  description: 'Should the group be visible to all student?'
                  type: boolean
                  example: 'true'
                  nullable: false
                isOrganizational:
                  description: 'Whether the group is organizational (no assignments nor students).'
                  type: boolean
                  example: 'true'
                  nullable: false
                isExam:
                  description: 'Whether the group is an exam group.'
                  type: boolean
                  example: 'true'
                  nullable: false
                localizedTexts:
                  description: 'Localized names and descriptions'
                  type: array
                  items: {  }
                  nullable: false
                threshold:
                  description: 'A minimum percentage of points needed to pass the course'
                  type: integer
                  example: '0'
                  nullable: false
                pointsLimit:
                  description: 'A minimum of (absolute) points needed to pass the course'
                  type: integer
                  example: '0'
                  nullable: false
                noAdmin:
                  description: 'If true, no admin is assigned to group (current user is assigned as admin by default.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/groups/validate-add-group-data:
    post:
      summary: 'Validate group creation data'
      description: 'Validate group creation data'
      operationId: groupsPresenterActionValidateAddGroupData
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - locale
                - instanceId
              properties:
                name:
                  description: 'Name of the group'
                  type: string
                  nullable: true
                locale:
                  description: 'The locale of the name'
                  type: string
                  nullable: true
                instanceId:
                  description: 'Identifier of the instance where the group belongs'
                  type: string
                  nullable: true
                parentGroupId:
                  description: 'Identifier of the parent group'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}':
    get:
      summary: 'Get details of a group'
      description: 'Get details of a group'
      operationId: groupsPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update group info'
      description: 'Update group info'
      operationId: groupsPresenterActionUpdateGroup
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - publicStats
                - isPublic
                - localizedTexts
              properties:
                externalId:
                  description: 'An informative, human readable identifier of the group'
                  type: string
                  nullable: true
                publicStats:
                  description: "Should students be able to see each other's results?"
                  type: boolean
                  example: 'true'
                  nullable: false
                detaining:
                  description: 'Are students prevented from leaving the group on their own?'
                  type: boolean
                  example: 'true'
                  nullable: false
                isPublic:
                  description: 'Should the group be visible to all student?'
                  type: boolean
                  example: 'true'
                  nullable: false
                threshold:
                  description: 'A minimum percentage of points needed to pass the course'
                  type: integer
                  example: '0'
                  nullable: false
                pointsLimit:
                  description: 'A minimum of (absolute) points needed to pass the course'
                  type: integer
                  example: '0'
                  nullable: false
                localizedTexts:
                  description: 'Localized names and descriptions'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Response data'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - payload
                properties:
                  success: { description: '', type: boolean, example: 'true', nullable: false }
                  code: { description: '', type: integer, example: '0', nullable: false }
                  payload: { description: '', properties: { id: { description: 'An identifier of the group', type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000, nullable: false }, externalId: { description: 'An informative, human readable identifier of the group', type: string, example: text, nullable: true }, organizational: { description: 'Whether the group is organizational (no assignments nor students).', type: boolean, example: 'true', nullable: false }, exam: { description: 'Whether the group is an exam group.', type: boolean, example: 'true', nullable: false }, archived: { description: 'Whether the group is archived', type: boolean, example: 'true', nullable: false }, public: { description: 'Should the group be visible to all student?', type: boolean, example: 'true', nullable: false }, directlyArchived: { description: 'Whether the group was explicitly marked as archived', type: boolean, example: 'true', nullable: false }, localizedTexts: { description: 'Localized names and descriptions', type: array, items: {  }, nullable: false }, primaryAdminsIds: { description: 'IDs of users which are explicitly listed as direct admins of this group', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, parentGroupId: { description: 'Identifier of the parent group (absent for a top-level group)', type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000, nullable: false }, parentGroupsIds: { description: 'Identifications of groups in descending order.', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, childGroups: { description: 'Identifications of child groups.', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, privateData: { description: '', properties: { admins: { description: 'IDs of all users that have admin privileges to this group (including inherited)', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, supervisors: { description: '', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, observers: { description: '', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, students: { description: '', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, instanceId: { description: '', type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000, nullable: false }, hasValidLicence: { description: '', type: boolean, example: 'true', nullable: false }, assignments: { description: '', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, shadowAssignments: { description: '', type: array, items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }, nullable: false }, publicStats: { description: '', type: boolean, example: 'true', nullable: false }, detaining: { description: '', type: boolean, example: 'true', nullable: false }, threshold: { description: '', type: number, example: '0.1', nullable: false }, pointsLimit: { description: '', type: integer, example: '0', nullable: false }, bindings: { description: '', type: array, items: {  }, nullable: false }, examBegin: { description: '', type: integer, example: '1740135333', nullable: false }, examEnd: { description: '', type: integer, example: '1740135333', nullable: false }, examLockStrict: { description: '', type: boolean, example: 'true', nullable: false }, exams: { description: '', type: array, items: {  }, nullable: false } }, type: object, nullable: false }, permissionHints: { description: '', type: array, items: {  }, nullable: false } }, type: object, nullable: false }
                type: object
    delete:
      summary: 'Delete a group'
      description: 'Delete a group'
      operationId: groupsPresenterActionRemoveGroup
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/subgroups':
    get:
      summary: 'Get a list of subgroups of a group'
      description: 'Get a list of subgroups of a group'
      operationId: groupsPresenterActionSubgroups
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/organizational':
    post:
      summary: "Set the 'isOrganizational' flag for a group"
      description: "Set the 'isOrganizational' flag for a group"
      operationId: groupsPresenterActionSetOrganizational
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  description: 'The value of the flag'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/archived':
    post:
      summary: "Set the 'isArchived' flag for a group"
      description: "Set the 'isArchived' flag for a group"
      operationId: groupsPresenterActionSetArchived
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  description: 'The value of the flag'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/examPeriod':
    post:
      summary: 'Set an examination period (in the future) when the group will be secured for submitting. Only locked students may submit solutions in the group during this period. This endpoint is also used to update already planned exam period, but only dates in the future can be edited (e.g., once an exam begins, the beginning may no longer be updated).'
      description: 'Set an examination period (in the future) when the group will be secured for submitting. Only locked students may submit solutions in the group during this period. This endpoint is also used to update already planned exam period, but only dates in the future can be edited (e.g., once an exam begins, the beginning may no longer be updated).'
      operationId: groupsPresenterActionSetExamPeriod
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - end
              properties:
                begin:
                  description: 'When the exam begins (unix ts in the future, optional if update is performed).'
                  type: integer
                  example: '1740135333'
                  nullable: true
                end:
                  description: "When the exam ends (unix ts in the future, no more than a day after 'begin')."
                  type: integer
                  example: '1740135333'
                  nullable: false
                strict:
                  description: 'Whether locked users are prevented from accessing other groups.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Change the group back to regular group (remove information about an exam).'
      description: 'Change the group back to regular group (remove information about an exam).'
      operationId: groupsPresenterActionRemoveExamPeriod
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/exam/{examId}':
    get:
      summary: 'Retrieve a list of locks for given exam'
      description: 'Retrieve a list of locks for given exam'
      operationId: groupsPresenterActionGetExamLocks
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the related group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: examId
          in: path
          description: 'An identifier of the exam'
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/relocate/{newParentId}':
    post:
      summary: 'Relocate the group under a different parent.'
      description: 'Relocate the group under a different parent.'
      operationId: groupsPresenterActionRelocate
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the relocated group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: newParentId
          in: path
          description: 'An identifier of the new parent group'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/students/stats':
    get:
      summary: 'Get statistics of a group. If the user does not have the rights to view all of these, try to at least return their statistics.'
      description: 'Get statistics of a group. If the user does not have the rights to view all of these, try to at least return their statistics.'
      operationId: groupsPresenterActionStats
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/students/{userId}':
    get:
      summary: 'Get statistics of a single student in a group'
      description: 'Get statistics of a single student in a group'
      operationId: groupsPresenterActionStudentsStats
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Add a student to a group'
      description: 'Add a student to a group'
      operationId: groupsPresenterActionAddStudent
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove a student from a group'
      description: 'Remove a student from a group'
      operationId: groupsPresenterActionRemoveStudent
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/students/{userId}/solutions':
    get:
      summary: 'Get all solutions of a single student from all assignments in a group'
      description: 'Get all solutions of a single student from all assignments in a group'
      operationId: groupsPresenterActionStudentsSolutions
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/lock/{userId}':
    post:
      summary: 'Lock student in a group and with an IP from which the request was made.'
      description: 'Lock student in a group and with an IP from which the request was made.'
      operationId: groupsPresenterActionLockStudent
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Unlock a student currently locked in a group.'
      description: 'Unlock a student currently locked in a group.'
      operationId: groupsPresenterActionUnlockStudent
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the student'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/members':
    get:
      summary: 'Get a list of members of a group'
      description: 'Get a list of members of a group'
      operationId: groupsPresenterActionMembers
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/members/{userId}':
    post:
      summary: 'Add/update a membership (other than student) for given user'
      description: 'Add/update a membership (other than student) for given user'
      operationId: groupsPresenterActionAddMember
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the supervisor'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - type
              properties:
                type:
                  description: 'Identifier of membership type (admin, supervisor, ...)'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove a member (other than student) from a group'
      description: 'Remove a member (other than student) from a group'
      operationId: groupsPresenterActionRemoveMember
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: path
          description: 'Identifier of the supervisor'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/assignments':
    get:
      summary: 'Get all exercise assignments for a group'
      description: 'Get all exercise assignments for a group'
      operationId: groupsPresenterActionAssignments
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{id}/shadow-assignments':
    get:
      summary: 'Get all shadow assignments for a group'
      description: 'Get all shadow assignments for a group'
      operationId: groupsPresenterActionShadowAssignments
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/groups/{groupId}/invitations':
    get:
      summary: 'List all invitations of a group.'
      description: 'List all invitations of a group.'
      operationId: groupInvitationsPresenterActionList
      parameters:
        -
          name: groupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a new invitation for given group.'
      description: 'Create a new invitation for given group.'
      operationId: groupInvitationsPresenterActionCreate
      parameters:
        -
          name: groupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - expireAt
                - note
              properties:
                expireAt:
                  description: 'When the invitation expires.'
                  type: integer
                  example: '1740135333'
                  nullable: true
                note:
                  description: 'Note for the students who wish to use the invitation link.'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/group-invitations/{id}':
    get:
      summary: 'Return invitation details including all relevant group entities (so a name can be constructed).'
      description: 'Return invitation details including all relevant group entities (so a name can be constructed).'
      operationId: groupInvitationsPresenterActionDefault
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group invitation'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Edit the invitation.'
      description: 'Edit the invitation.'
      operationId: groupInvitationsPresenterActionUpdate
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group invitation'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - expireAt
                - note
              properties:
                expireAt:
                  description: 'When the invitation expires.'
                  type: integer
                  example: '1740135333'
                  nullable: true
                note:
                  description: 'Note for the students who wish to use the invitation link.'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      operationId: groupInvitationsPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group invitation'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/group-invitations/{id}/accept':
    post:
      summary: 'Allow the current user to join the corresponding group using the invitation.'
      description: 'Allow the current user to join the corresponding group using the invitation.'
      operationId: groupInvitationsPresenterActionAccept
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the group invitation'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/group-attributes:
    get:
      summary: 'Return all attributes that correspond to given filtering parameters.'
      description: 'Return all attributes that correspond to given filtering parameters.'
      operationId: groupExternalAttributesPresenterActionDefault
      parameters:
        -
          name: filter
          in: query
          description: 'JSON-encoded filter query in DNF as [clause OR clause...]'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/group-attributes/{groupId}':
    post:
      summary: 'Create an external attribute for given group.'
      description: 'Create an external attribute for given group.'
      operationId: groupExternalAttributesPresenterActionAdd
      parameters:
        -
          name: groupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - service
                - key
                - value
              properties:
                service:
                  description: 'Identifier of the external service creating the attribute'
                  type: string
                  maxLength: 32
                  minLength: 1
                  example: text
                  nullable: false
                key:
                  description: 'Key of the attribute (must be valid identifier)'
                  type: string
                  maxLength: 32
                  minLength: 1
                  example: text
                  nullable: false
                value:
                  description: 'Value of the attribute (arbitrary string)'
                  type: string
                  maxLength: 255
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/group-attributes/{id}':
    delete:
      summary: 'Remove selected attribute'
      description: 'Remove selected attribute'
      operationId: groupExternalAttributesPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the external attribute.'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/instances:
    get:
      summary: 'Get a list of all instances'
      description: 'Get a list of all instances'
      operationId: instancesPresenterActionDefault
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a new instance'
      description: 'Create a new instance'
      operationId: instancesPresenterActionCreateInstance
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - isOpen
              properties:
                name:
                  description: 'Name of the instance'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                description:
                  description: 'Description of the instance'
                  type: string
                  nullable: true
                isOpen:
                  description: 'Should the instance be open for registration?'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/instances/{id}':
    get:
      summary: 'Get details of an instance'
      description: 'Get details of an instance'
      operationId: instancesPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the instance'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update an instance'
      description: 'Update an instance'
      operationId: instancesPresenterActionUpdateInstance
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the updated instance'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                isOpen:
                  description: 'Should the instance be open for registration?'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete an instance'
      description: 'Delete an instance'
      operationId: instancesPresenterActionDeleteInstance
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the instance to be deleted'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/instances/{id}/licences':
    get:
      summary: 'Get a list of licenses associated with an instance'
      description: 'Get a list of licenses associated with an instance'
      operationId: instancesPresenterActionLicences
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the instance'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a new license for an instance'
      description: 'Create a new license for an instance'
      operationId: instancesPresenterActionCreateLicence
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the instance'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - note
                - validUntil
              properties:
                note:
                  description: 'A note for users or administrators'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                validUntil:
                  description: 'Expiration date of the license'
                  type: integer
                  example: '1740135333'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/instances/licences/{licenceId}':
    post:
      summary: 'Update an existing license for an instance'
      description: 'Update an existing license for an instance'
      operationId: instancesPresenterActionUpdateLicence
      parameters:
        -
          name: licenceId
          in: path
          description: 'Identifier of the license'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                note:
                  description: 'A note for users or administrators'
                  type: string
                  maxLength: 255
                  minLength: 2
                  example: text
                  nullable: false
                validUntil:
                  description: 'Expiration date of the license'
                  type: string
                  example: text
                  nullable: false
                isValid:
                  description: 'Administrator switch to toggle license validity'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove existing license for an instance'
      description: 'Remove existing license for an instance'
      operationId: instancesPresenterActionDeleteLicence
      parameters:
        -
          name: licenceId
          in: path
          description: 'Identifier of the license'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/exercise/{exerciseId}':
    get:
      summary: 'Get reference solutions for an exercise'
      description: 'Get reference solutions for an exercise'
      operationId: referenceExerciseSolutionsPresenterActionSolutions
      parameters:
        -
          name: exerciseId
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/exercise/{exerciseId}/pre-submit':
    post:
      summary: 'Pre submit action which will, based on given files, detect possible runtime environments for the exercise. Also it can be further used for entry points and other important things that should be provided by user during submit.'
      description: 'Pre submit action which will, based on given files, detect possible runtime environments for the exercise. Also it can be further used for entry points and other important things that should be provided by user during submit.'
      operationId: referenceExerciseSolutionsPresenterActionPreSubmit
      parameters:
        -
          name: exerciseId
          in: path
          description: 'identifier of exercise'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  description: ''
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/exercise/{exerciseId}/submit':
    post:
      summary: 'Add new reference solution to an exercise'
      description: 'Add new reference solution to an exercise'
      operationId: referenceExerciseSolutionsPresenterActionSubmit
      parameters:
        -
          name: exerciseId
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - note
                - files
                - runtimeEnvironmentId
              properties:
                note:
                  description: 'Description of this particular reference solution, for example used algorithm'
                  type: string
                  example: text
                  nullable: false
                files:
                  description: 'Files of the reference solution'
                  type: string
                  nullable: true
                runtimeEnvironmentId:
                  description: 'ID of runtime for this solution'
                  type: string
                  nullable: true
                solutionParams:
                  description: 'Solution parameters'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/exercise/{exerciseId}/resubmit-all':
    post:
      summary: 'Evaluate all reference solutions for an exercise (and for all configured hardware groups).'
      description: 'Evaluate all reference solutions for an exercise (and for all configured hardware groups).'
      operationId: referenceExerciseSolutionsPresenterActionResubmitAll
      parameters:
        -
          name: exerciseId
          in: path
          description: 'Identifier of the exercise'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                debug:
                  description: 'Debugging evaluation with all logs and outputs'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{solutionId}':
    get:
      summary: 'Get details of a reference solution'
      description: 'Get details of a reference solution'
      operationId: referenceExerciseSolutionsPresenterActionDetail
      parameters:
        -
          name: solutionId
          in: path
          description: 'An identifier of the solution'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update details about the ref. solution (note, etc...)'
      description: 'Update details about the ref. solution (note, etc...)'
      operationId: referenceExerciseSolutionsPresenterActionUpdate
      parameters:
        -
          name: solutionId
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - note
              properties:
                note:
                  description: 'A description by the author of the solution'
                  type: string
                  maxLength: 65535
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete reference solution with given identification.'
      description: 'Delete reference solution with given identification.'
      operationId: referenceExerciseSolutionsPresenterActionDeleteReferenceSolution
      parameters:
        -
          name: solutionId
          in: path
          description: 'identifier of reference solution'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{id}/resubmit':
    post:
      summary: 'Evaluate a single reference exercise solution for all configured hardware groups'
      description: 'Evaluate a single reference exercise solution for all configured hardware groups'
      operationId: referenceExerciseSolutionsPresenterActionResubmit
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the reference solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                debug:
                  description: 'Debugging evaluation with all logs and outputs'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{solutionId}/submissions':
    get:
      summary: 'Get a list of submissions for given reference solution.'
      description: 'Get a list of submissions for given reference solution.'
      operationId: referenceExerciseSolutionsPresenterActionSubmissions
      parameters:
        -
          name: solutionId
          in: path
          description: 'identifier of the reference exercise solution'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{id}/files':
    get:
      summary: 'Get the list of submitted files of the solution.'
      description: 'Get the list of submitted files of the solution.'
      operationId: referenceExerciseSolutionsPresenterActionFiles
      parameters:
        -
          name: id
          in: path
          description: 'of reference solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{solutionId}/download-solution':
    get:
      summary: 'Download archive containing all solution files for particular reference solution.'
      description: 'Download archive containing all solution files for particular reference solution.'
      operationId: referenceExerciseSolutionsPresenterActionDownloadSolutionArchive
      parameters:
        -
          name: solutionId
          in: path
          description: 'of reference solution'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/{solutionId}/visibility':
    post:
      summary: 'Set visibility of given reference solution.'
      description: 'Set visibility of given reference solution.'
      operationId: referenceExerciseSolutionsPresenterActionSetVisibility
      parameters:
        -
          name: solutionId
          in: path
          description: 'of reference solution'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - visibility
              properties:
                visibility:
                  description: 'New visibility level.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/submission/{submissionId}':
    get:
      summary: 'Get reference solution evaluation (i.e., submission) for an exercise solution.'
      description: 'Get reference solution evaluation (i.e., submission) for an exercise solution.'
      operationId: referenceExerciseSolutionsPresenterActionSubmission
      parameters:
        -
          name: submissionId
          in: path
          description: 'identifier of the reference exercise submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove reference solution evaluation (submission) permanently.'
      description: 'Remove reference solution evaluation (submission) permanently.'
      operationId: referenceExerciseSolutionsPresenterActionDeleteSubmission
      parameters:
        -
          name: submissionId
          in: path
          description: 'Identifier of the reference solution submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/submission/{submissionId}/download-result':
    get:
      summary: 'Download result archive from backend for a reference solution evaluation'
      description: 'Download result archive from backend for a reference solution evaluation'
      operationId: referenceExerciseSolutionsPresenterActionDownloadResultArchive
      parameters:
        -
          name: submissionId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/reference-solutions/submission/{submissionId}/score-config':
    get:
      summary: 'Get score configuration associated with given submission evaluation'
      description: 'Get score configuration associated with given submission evaluation'
      operationId: referenceExerciseSolutionsPresenterActionEvaluationScoreConfig
      parameters:
        -
          name: submissionId
          in: path
          description: 'identifier of the reference exercise submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}':
    get:
      summary: 'Get information about solutions.'
      description: 'Get information about solutions.'
      operationId: assignmentSolutionsPresenterActionSolution
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update details about the solution (note, etc...)'
      description: 'Update details about the solution (note, etc...)'
      operationId: assignmentSolutionsPresenterActionUpdateSolution
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - note
              properties:
                note:
                  description: 'A note by the author of the solution'
                  type: string
                  maxLength: 1024
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete assignment solution with given identification.'
      description: 'Delete assignment solution with given identification.'
      operationId: assignmentSolutionsPresenterActionDeleteSolution
      parameters:
        -
          name: id
          in: path
          description: 'identifier of assignment solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/bonus-points':
    post:
      summary: 'Set new amount of bonus points for a solution (and optionally points override) Returns array of solution entities that has been changed by this.'
      description: 'Set new amount of bonus points for a solution (and optionally points override) Returns array of solution entities that has been changed by this.'
      operationId: assignmentSolutionsPresenterActionSetBonusPoints
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - bonusPoints
              properties:
                bonusPoints:
                  description: 'New amount of bonus points, can be negative number'
                  type: integer
                  example: '0'
                  nullable: false
                overriddenPoints:
                  description: 'Overrides points assigned to solution by the system'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/submissions':
    get:
      summary: 'Get list of all submissions of a solution'
      description: 'Get list of all submissions of a solution'
      operationId: assignmentSolutionsPresenterActionSubmissions
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/set-flag/{flag}':
    post:
      summary: 'Set flag of the assignment solution.'
      description: 'Set flag of the assignment solution.'
      operationId: assignmentSolutionsPresenterActionSetFlag
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: flag
          in: path
          description: 'name of the flag which should to be changed'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  description: 'True or false which should be set to given flag name'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/resubmit':
    post:
      summary: 'Resubmit a solution (i.e., create a new submission)'
      description: 'Resubmit a solution (i.e., create a new submission)'
      operationId: submitPresenterActionResubmit
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                debug:
                  description: 'Debugging resubmit with all logs and outputs'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/files':
    get:
      summary: 'Get the list of submitted files of the solution.'
      description: 'Get the list of submitted files of the solution.'
      operationId: assignmentSolutionsPresenterActionFiles
      parameters:
        -
          name: id
          in: path
          description: 'of assignment solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/download-solution':
    get:
      summary: 'Download archive containing all solution files for particular solution.'
      description: 'Download archive containing all solution files for particular solution.'
      operationId: assignmentSolutionsPresenterActionDownloadSolutionArchive
      parameters:
        -
          name: id
          in: path
          description: 'of assignment solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/submission/{submissionId}':
    get:
      summary: 'Get information about the evaluation of a submission'
      description: 'Get information about the evaluation of a submission'
      operationId: assignmentSolutionsPresenterActionSubmission
      parameters:
        -
          name: submissionId
          in: path
          description: 'Identifier of the submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove the submission permanently'
      description: 'Remove the submission permanently'
      operationId: assignmentSolutionsPresenterActionDeleteSubmission
      parameters:
        -
          name: submissionId
          in: path
          description: 'Identifier of the submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/submission/{submissionId}/download-result':
    get:
      summary: 'Download result archive from backend for particular submission.'
      description: 'Download result archive from backend for particular submission.'
      operationId: assignmentSolutionsPresenterActionDownloadResultArchive
      parameters:
        -
          name: submissionId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/submission/{submissionId}/score-config':
    get:
      summary: 'Get score configuration associated with given submission evaluation'
      description: 'Get score configuration associated with given submission evaluation'
      operationId: assignmentSolutionsPresenterActionEvaluationScoreConfig
      parameters:
        -
          name: submissionId
          in: path
          description: 'Identifier of the submission'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/review':
    get:
      summary: 'Get detail of the solution and a list of review comments.'
      description: 'Get detail of the solution and a list of review comments.'
      operationId: assignmentSolutionReviewsPresenterActionDefault
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update the state of the review process of the solution.'
      description: 'Update the state of the review process of the solution.'
      operationId: assignmentSolutionReviewsPresenterActionUpdate
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - close
              properties:
                close:
                  description: 'If true, the review is closed. If false, the review is (re)opened.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Update the state of the review process of the solution.'
      description: 'Update the state of the review process of the solution.'
      operationId: assignmentSolutionReviewsPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/review-comment':
    post:
      summary: 'Create a new comment within a review.'
      description: 'Create a new comment within a review.'
      operationId: assignmentSolutionReviewsPresenterActionNewComment
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
                - file
                - line
              properties:
                text:
                  description: 'The comment itself.'
                  type: string
                  maxLength: 65535
                  minLength: 1
                  example: text
                  nullable: false
                file:
                  description: 'Identification of the file to which the comment is related to.'
                  type: string
                  maxLength: 256
                  example: text
                  nullable: false
                line:
                  description: 'Line in the designated file to which the comment is related to.'
                  type: integer
                  example: '0'
                  nullable: false
                issue:
                  description: 'Whether the comment is an issue (expected to be resolved by the student)'
                  type: boolean
                  example: 'true'
                  nullable: false
                suppressNotification:
                  description: 'If true, no email notification will be sent (only applies when the review has been closed)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/assignment-solutions/{id}/review-comment/{commentId}':
    post:
      summary: 'Update existing comment within a review.'
      description: 'Update existing comment within a review.'
      operationId: assignmentSolutionReviewsPresenterActionEditComment
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: commentId
          in: path
          description: 'identifier of the review comment'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              properties:
                text:
                  description: 'The comment itself.'
                  type: string
                  maxLength: 65535
                  minLength: 1
                  example: text
                  nullable: false
                issue:
                  description: 'Whether the comment is an issue (expected to be resolved by the student)'
                  type: boolean
                  example: 'true'
                  nullable: false
                suppressNotification:
                  description: 'If true, no email notification will be sent (only applies when the review has been closed)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove one comment from a review.'
      description: 'Remove one comment from a review.'
      operationId: assignmentSolutionReviewsPresenterActionDeleteComment
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the solution'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: commentId
          in: path
          description: 'identifier of the review comment'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/assignment-solvers:
    get:
      summary: 'Get a list of assignment solvers based on given parameters (assignment/group and solver user). Either assignment or group ID must be set (group is ignored if assignment is set), user ID is optional.'
      description: 'Get a list of assignment solvers based on given parameters (assignment/group and solver user). Either assignment or group ID must be set (group is ignored if assignment is set), user ID is optional.'
      operationId: assignmentSolversPresenterActionDefault
      parameters:
        -
          name: assignmentId
          in: query
          description: ''
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: groupId
          in: query
          description: 'An alternative for assignment ID, selects all assignments from a group.'
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: userId
          in: query
          description: ''
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/submission-failures:
    get:
      summary: 'List all submission failures, ever'
      description: 'List all submission failures, ever'
      operationId: submissionFailuresPresenterActionDefault
      responses:
        '200':
          description: 'Placeholder response'
  /v1/submission-failures/unresolved:
    get:
      summary: 'List all unresolved submission failures'
      description: 'List all unresolved submission failures'
      operationId: submissionFailuresPresenterActionUnresolved
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/submission-failures/{id}':
    get:
      summary: 'Get details of a failure'
      description: 'Get details of a failure'
      operationId: submissionFailuresPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the failure'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/submission-failures/{id}/resolve':
    post:
      summary: 'Mark a submission failure as resolved'
      description: 'Mark a submission failure as resolved'
      operationId: submissionFailuresPresenterActionResolve
      parameters:
        -
          name: id
          in: path
          description: 'An identifier of the failure'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - sendEmail
              properties:
                note:
                  description: 'Brief description of how the failure was resolved'
                  type: string
                  maxLength: 255
                  example: text
                  nullable: false
                sendEmail:
                  description: 'True if email should be sent to the author of submission'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/uploaded-files/partial:
    post:
      summary: 'Start new upload per-partes. This process expects the file is uploaded as a sequence of PUT requests, each one carrying a chunk of data. Once all the chunks are in place, the complete request assembles them together in one file and transforms UploadPartialFile into UploadFile entity.'
      description: 'Start new upload per-partes. This process expects the file is uploaded as a sequence of PUT requests, each one carrying a chunk of data. Once all the chunks are in place, the complete request assembles them together in one file and transforms UploadPartialFile into UploadFile entity.'
      operationId: uploadedFilesPresenterActionStartPartial
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - size
              properties:
                name:
                  description: 'Name of the uploaded file.'
                  type: string
                  maxLength: 255
                  minLength: 1
                  example: text
                  nullable: false
                size:
                  description: 'Total size in bytes.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/partial/{id}':
    put:
      summary: 'Add another chunk to partial upload.'
      description: 'Add another chunk to partial upload.'
      operationId: uploadedFilesPresenterActionAppendPartial
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the partial file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: offset
          in: query
          description: 'Offset of the chunk for verification'
          required: true
          schema:
            type: integer
            nullable: false
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Finalize partial upload and convert the partial file into UploadFile. All data chunks are extracted from the store, assembled into one file, and is moved back into the store.'
      description: 'Finalize partial upload and convert the partial file into UploadFile. All data chunks are extracted from the store, assembled into one file, and is moved back into the store.'
      operationId: uploadedFilesPresenterActionCompletePartial
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the partial file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Cancel partial upload and remove all uploaded chunks.'
      description: 'Cancel partial upload and remove all uploaded chunks.'
      operationId: uploadedFilesPresenterActionCancelPartial
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the partial file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/uploaded-files:
    post:
      summary: 'Upload a file'
      description: 'Upload a file'
      operationId: uploadedFilesPresenterActionUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  description: 'The whole file to be uploaded'
                  type: string
                  format: binary
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/supplementary-file/{id}/download':
    get:
      summary: 'Download supplementary file'
      description: 'Download supplementary file'
      operationId: uploadedFilesPresenterActionDownloadSupplementaryFile
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/{id}':
    get:
      summary: 'Get details of a file'
      description: 'Get details of a file'
      operationId: uploadedFilesPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the uploaded file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/{id}/download':
    get:
      summary: 'Download a file'
      description: 'Download a file'
      operationId: uploadedFilesPresenterActionDownload
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: entry
          in: query
          description: 'Name of the entry in the ZIP archive (if the target file is ZIP)'
          required: false
          schema:
            type: string
            minLength: 1
            nullable: false
        -
          name: similarSolutionId
          in: query
          description: 'Id of an assignment solution which has detected possible plagiarism in this file. This is basically a shortcut (hint) for ACLs.'
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/{id}/content':
    get:
      summary: 'Get the contents of a file'
      description: 'Get the contents of a file'
      operationId: uploadedFilesPresenterActionContent
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: entry
          in: query
          description: 'Name of the entry in the ZIP archive (if the target file is ZIP)'
          required: false
          schema:
            type: string
            minLength: 1
            nullable: false
        -
          name: similarSolutionId
          in: query
          description: 'Id of an assignment solution which has detected possible plagiarism in this file. This is basically a shortcut (hint) for ACLs.'
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/uploaded-files/{id}/digest':
    get:
      summary: 'Compute a digest using a hashing algorithm. This feature is intended for upload checksums only. In the future, we might want to add algorithm selection via query parameter (default is SHA1).'
      description: 'Compute a digest using a hashing algorithm. This feature is intended for upload checksums only. In the future, we might want to add algorithm selection via query parameter (default is SHA1).'
      operationId: uploadedFilesPresenterActionDigest
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the file'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/users:
    get:
      summary: 'Get a list of all users matching given filters in given pagination rage. The result conforms to pagination protocol.'
      description: 'Get a list of all users matching given filters in given pagination rage. The result conforms to pagination protocol.'
      operationId: usersPresenterActionDefault
      parameters:
        -
          name: offset
          in: query
          description: 'Index of the first result.'
          required: false
          schema:
            type: integer
            nullable: false
        -
          name: limit
          in: query
          description: 'Maximal number of results returned.'
          required: false
          schema:
            type: integer
            nullable: true
        -
          name: orderBy
          in: query
          description: "Name of the column (column concept). The '!' prefix indicate descending order."
          required: false
          schema:
            type: string
            nullable: true
        -
          name: filters
          in: query
          description: 'Named filters that prune the result.'
          required: false
          schema:
            type: array
            items: {  }
            nullable: true
        -
          name: locale
          in: query
          description: 'Currently set locale (used to augment order by clause if necessary),'
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a user account'
      description: 'Create a user account'
      operationId: registrationPresenterActionCreateAccount
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - firstName
                - lastName
                - password
                - passwordConfirm
                - instanceId
              properties:
                email:
                  description: 'An email that will serve as a login name'
                  type: string
                  minLength: 1
                  example: name@domain.tld
                  nullable: false
                firstName:
                  description: 'First name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                lastName:
                  description: 'Last name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                password:
                  description: 'A password for authentication'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                passwordConfirm:
                  description: 'A password confirmation'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                instanceId:
                  description: 'Identifier of the instance to register in'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                titlesBeforeName:
                  description: 'Titles which is placed before user name'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                titlesAfterName:
                  description: 'Titles which is placed after user name'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                ignoreNameCollision:
                  description: 'If a use with the same name exists, this needs to be set to true.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/users/validate-registration-data:
    post:
      summary: "Check if the registered E-mail isn't already used and if the password is strong enough"
      description: "Check if the registered E-mail isn't already used and if the password is strong enough"
      operationId: registrationPresenterActionValidateRegistrationData
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  description: 'E-mail address (login name)'
                  type: string
                  nullable: true
                password:
                  description: 'Authentication password'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/users/list:
    post:
      summary: 'Get a list of users based on given ids.'
      description: 'Get a list of users based on given ids.'
      operationId: usersPresenterActionListByIds
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ids
              properties:
                ids:
                  description: 'Identifications of users'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/ical/{id}':
    get:
      summary: 'Get calendar values in iCal format that correspond to given token.'
      description: 'Get calendar values in iCal format that correspond to given token.'
      operationId: userCalendarsPresenterActionDefault
      parameters:
        -
          name: id
          in: path
          description: 'the iCal token'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Set given iCal token to expired state. Expired tokens cannot be used to retrieve calendars.'
      description: 'Set given iCal token to expired state. Expired tokens cannot be used to retrieve calendars.'
      operationId: userCalendarsPresenterActionExpireCalendar
      parameters:
        -
          name: id
          in: path
          description: 'the iCal token'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/users/invite:
    post:
      summary: 'Create an invitation for a user and send it over via email'
      description: 'Create an invitation for a user and send it over via email'
      operationId: registrationPresenterActionCreateInvitation
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - firstName
                - lastName
                - instanceId
              properties:
                email:
                  description: 'An email that will serve as a login name'
                  type: string
                  minLength: 1
                  example: name@domain.tld
                  nullable: false
                firstName:
                  description: 'First name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                lastName:
                  description: 'Last name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                instanceId:
                  description: 'Identifier of the instance to register in'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
                titlesBeforeName:
                  description: 'Titles that are placed before user name'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                titlesAfterName:
                  description: 'Titles that are placed after user name'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                groups:
                  description: 'List of group IDs in which the user is added right after registration'
                  type: array
                  items: {  }
                  nullable: false
                locale:
                  description: 'Language used in the invitation email (en by default).'
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: text
                  nullable: false
                ignoreNameCollision:
                  description: 'If a use with the same name exists, this needs to be set to true.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/users/accept-invitation:
    post:
      summary: 'Accept invitation and create corresponding user account.'
      description: 'Accept invitation and create corresponding user account.'
      operationId: registrationPresenterActionAcceptInvitation
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
                - password
                - passwordConfirm
              properties:
                token:
                  description: 'Token issued in create invitation process.'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                password:
                  description: 'A password for authentication'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                passwordConfirm:
                  description: 'A password confirmation'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}':
    get:
      summary: 'Get details of a user account'
      description: 'Get details of a user account'
      operationId: usersPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update the profile associated with a user account'
      description: 'Update the profile associated with a user account'
      operationId: usersPresenterActionUpdateProfile
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstName:
                  description: 'First name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                lastName:
                  description: 'Last name'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                titlesBeforeName:
                  description: 'Titles before name'
                  type: string
                  nullable: true
                titlesAfterName:
                  description: 'Titles after name'
                  type: string
                  nullable: true
                email:
                  description: 'New email address'
                  type: string
                  minLength: 1
                  example: name@domain.tld
                  nullable: false
                oldPassword:
                  description: 'Old password of current user'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                password:
                  description: 'New password of current user'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                passwordConfirm:
                  description: 'Confirmation of new password of current user'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                gravatarUrlEnabled:
                  description: 'Enable or disable gravatar profile image'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete a user account'
      description: 'Delete a user account'
      operationId: usersPresenterActionDelete
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/invalidate-tokens':
    post:
      summary: 'Invalidate all existing tokens issued for given user'
      description: 'Invalidate all existing tokens issued for given user'
      operationId: usersPresenterActionInvalidateTokens
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/groups':
    get:
      summary: 'Get a list of non-archived groups for a user'
      description: 'Get a list of non-archived groups for a user'
      operationId: usersPresenterActionGroups
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/groups/all':
    get:
      summary: 'Get a list of all groups for a user'
      description: 'Get a list of all groups for a user'
      operationId: usersPresenterActionAllGroups
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/instances':
    get:
      summary: 'Get a list of instances where a user is registered'
      description: 'Get a list of instances where a user is registered'
      operationId: usersPresenterActionInstances
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/settings':
    post:
      summary: 'Update the profile settings'
      description: 'Update the profile settings'
      operationId: usersPresenterActionUpdateSettings
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                defaultLanguage:
                  description: 'Default language of UI'
                  type: string
                  example: text
                  nullable: false
                newAssignmentEmails:
                  description: 'Flag if email should be sent to user when new assignment was created'
                  type: boolean
                  example: 'true'
                  nullable: false
                assignmentDeadlineEmails:
                  description: 'Flag if email should be sent to user if assignment deadline is nearby'
                  type: boolean
                  example: 'true'
                  nullable: false
                submissionEvaluatedEmails:
                  description: 'Flag if email should be sent to user when resubmission was evaluated'
                  type: boolean
                  example: 'true'
                  nullable: false
                solutionCommentsEmails:
                  description: 'Flag if email should be sent to user when new submission comment is added'
                  type: boolean
                  example: 'true'
                  nullable: false
                solutionReviewsEmails:
                  description: 'Flag enabling review-related email notifications sent to the author of the solution'
                  type: boolean
                  example: 'true'
                  nullable: false
                pointsChangedEmails:
                  description: 'Flag if email should be sent to user when the points were awarded for assignment'
                  type: boolean
                  example: 'true'
                  nullable: false
                assignmentSubmitAfterAcceptedEmails:
                  description: 'Flag if email should be sent to the group supervisor if a student submits new solution for already accepted assignment'
                  type: boolean
                  example: 'true'
                  nullable: false
                assignmentSubmitAfterReviewedEmails:
                  description: 'Flag if email should be sent to group supervisor if a student submits new solution for already reviewed and not accepted assignment'
                  type: boolean
                  example: 'true'
                  nullable: false
                exerciseNotificationEmails:
                  description: 'Flag if notifications sent by authors of exercises should be sent via email.'
                  type: boolean
                  example: 'true'
                  nullable: false
                solutionAcceptedEmails:
                  description: 'Flag if notification should be sent to a student when solution accepted flag is changed.'
                  type: boolean
                  example: 'true'
                  nullable: false
                solutionReviewRequestedEmails:
                  description: 'Flag if notification should be send to a teacher when a solution reviewRequested flag is changed in a supervised/admin-ed group.'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/ui-data':
    post:
      summary: 'Update the user-specific structured UI data'
      description: 'Update the user-specific structured UI data'
      operationId: usersPresenterActionUpdateUiData
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - uiData
              properties:
                uiData:
                  description: 'Structured user-specific UI data'
                  type: array
                  items: {  }
                  nullable: true
                overwrite:
                  description: 'Flag indicating that uiData should be overwritten completely (instead of regular merge)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/create-local':
    post:
      summary: 'If user is registered externally, add local account as another login method. Created password is empty and has to be changed in order to use it.'
      description: 'If user is registered externally, add local account as another login method. Created password is empty and has to be changed in order to use it.'
      operationId: usersPresenterActionCreateLocalAccount
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/role':
    post:
      summary: 'Set a given role to the given user.'
      description: 'Set a given role to the given user.'
      operationId: usersPresenterActionSetRole
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - role
              properties:
                role:
                  description: 'Role which should be assigned to the user'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/external-login/{service}':
    post:
      summary: 'Add or update existing external ID of given authentication service.'
      description: 'Add or update existing external ID of given authentication service.'
      operationId: usersPresenterActionUpdateExternalLogin
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: service
          in: path
          description: 'identifier of the authentication service (login type)'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - externalId
              properties:
                externalId:
                  description: ''
                  type: string
                  maxLength: 128
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove external ID of given authentication service.'
      description: 'Remove external ID of given authentication service.'
      operationId: usersPresenterActionRemoveExternalLogin
      parameters:
        -
          name: id
          in: path
          description: 'identifier of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: service
          in: path
          description: 'identifier of the authentication service (login type)'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/calendar-tokens':
    get:
      summary: 'Get all iCal tokens of one user (including expired ones).'
      description: 'Get all iCal tokens of one user (including expired ones).'
      operationId: userCalendarsPresenterActionUserCalendars
      parameters:
        -
          name: id
          in: path
          description: 'of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create new iCal token for a particular user.'
      description: 'Create new iCal token for a particular user.'
      operationId: userCalendarsPresenterActionCreateCalendar
      parameters:
        -
          name: id
          in: path
          description: 'of the user'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/pending-reviews':
    get:
      summary: 'Return all solutions with pending reviews that given user teaches (is admin/supervisor in corresponding groups). Along with that it returns all assignment entities of the corresponding solutions.'
      description: 'Return all solutions with pending reviews that given user teaches (is admin/supervisor in corresponding groups). Along with that it returns all assignment entities of the corresponding solutions.'
      operationId: assignmentSolutionReviewsPresenterActionPending
      parameters:
        -
          name: id
          in: path
          description: 'of the user whose pending reviews are listed'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/users/{id}/review-requests':
    get:
      summary: 'Return all solutions with reviewRequest flag that given user might need to review (is admin/supervisor in corresponding groups). Along with that it returns all assignment entities of the corresponding solutions.'
      description: 'Return all solutions with reviewRequest flag that given user might need to review (is admin/supervisor in corresponding groups). Along with that it returns all assignment entities of the corresponding solutions.'
      operationId: assignmentSolutionsPresenterActionReviewRequests
      parameters:
        -
          name: id
          in: path
          description: 'of the user whose solutions with requested reviews are listed'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/email-verification/verify:
    post:
      summary: 'Verify users email.'
      description: 'Verify users email.'
      operationId: emailVerificationPresenterActionEmailVerification
      responses:
        '200':
          description: 'Placeholder response'
  /v1/email-verification/resend:
    post:
      summary: 'Resend the email for the current user to verify his/her email address.'
      description: 'Resend the email for the current user to verify his/her email address.'
      operationId: emailVerificationPresenterActionResendVerificationEmail
      responses:
        '200':
          description: 'Placeholder response'
  /v1/forgotten-password:
    post:
      summary: 'Request a password reset (user will receive an e-mail that prompts them to reset their password)'
      description: 'Request a password reset (user will receive an e-mail that prompts them to reset their password)'
      operationId: forgottenPasswordPresenterActionDefault
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
              properties:
                username:
                  description: 'An identifier of the user whose password should be reset'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/forgotten-password/change:
    post:
      summary: "Change the user's password"
      description: "Change the user's password"
      operationId: forgottenPasswordPresenterActionChange
      requestBody:
        content:
          application/json:
            schema:
              required:
                - password
              properties:
                password:
                  description: 'The new password'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/forgotten-password/validate-password-strength:
    post:
      summary: 'Check if a password is strong enough'
      description: 'Check if a password is strong enough'
      operationId: forgottenPasswordPresenterActionValidatePasswordStrength
      requestBody:
        content:
          application/json:
            schema:
              required:
                - password
              properties:
                password:
                  description: 'The password to be checked'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/runtime-environments:
    get:
      summary: 'Get a list of all runtime environments'
      description: 'Get a list of all runtime environments'
      operationId: runtimeEnvironmentsPresenterActionDefault
      responses:
        '200':
          description: 'Placeholder response'
  /v1/hardware-groups:
    get:
      summary: 'Get a list of all hardware groups in system'
      description: 'Get a list of all hardware groups in system'
      operationId: hardwareGroupsPresenterActionDefault
      responses:
        '200':
          description: 'Placeholder response'
  /v1/pipelines:
    get:
      summary: 'Get a list of pipelines with an optional filter, ordering, and pagination pruning. The result conforms to pagination protocol.'
      description: 'Get a list of pipelines with an optional filter, ordering, and pagination pruning. The result conforms to pagination protocol.'
      operationId: pipelinesPresenterActionDefault
      parameters:
        -
          name: offset
          in: query
          description: 'Index of the first result.'
          required: false
          schema:
            type: integer
            nullable: false
        -
          name: limit
          in: query
          description: 'Maximal number of results returned.'
          required: false
          schema:
            type: integer
            nullable: true
        -
          name: orderBy
          in: query
          description: "Name of the column (column concept). The '!' prefix indicate descending order."
          required: false
          schema:
            type: string
            nullable: true
        -
          name: filters
          in: query
          description: 'Named filters that prune the result.'
          required: false
          schema:
            type: array
            items: {  }
            nullable: true
        -
          name: locale
          in: query
          description: 'Currently set locale (used to augment order by clause if necessary),'
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create a brand new pipeline.'
      description: 'Create a brand new pipeline.'
      operationId: pipelinesPresenterActionCreatePipeline
      requestBody:
        content:
          application/json:
            schema:
              properties:
                global:
                  description: 'Whether the pipeline is global (has no author, is used in generic runtimes)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/pipelines/boxes:
    get:
      summary: 'Get a list of default boxes which might be used in pipeline.'
      description: 'Get a list of default boxes which might be used in pipeline.'
      operationId: pipelinesPresenterActionGetDefaultBoxes
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/fork':
    post:
      summary: 'Create a complete copy of given pipeline.'
      description: 'Create a complete copy of given pipeline.'
      operationId: pipelinesPresenterActionForkPipeline
      parameters:
        -
          name: id
          in: path
          description: 'identification of pipeline to be copied'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                global:
                  description: 'Whether the pipeline is global (has no author, is used in generic runtimes)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}':
    get:
      summary: 'Get pipeline based on given identification.'
      description: 'Get pipeline based on given identification.'
      operationId: pipelinesPresenterActionGetPipeline
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update pipeline with given data.'
      description: 'Update pipeline with given data.'
      operationId: pipelinesPresenterActionUpdatePipeline
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - version
                - description
              properties:
                name:
                  description: 'Name of the pipeline'
                  type: string
                  minLength: 2
                  example: text
                  nullable: false
                version:
                  description: 'Version of the edited pipeline'
                  type: integer
                  example: '0'
                  nullable: false
                description:
                  description: 'Human readable description of pipeline'
                  type: string
                  nullable: true
                pipeline:
                  description: 'Pipeline configuration'
                  type: string
                  nullable: true
                parameters:
                  description: 'A set of parameters'
                  type: array
                  items: {  }
                  nullable: false
                global:
                  description: 'Whether the pipeline is global (has no author, is used in generic runtimes)'
                  type: boolean
                  example: 'true'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete an pipeline'
      description: 'Delete an pipeline'
      operationId: pipelinesPresenterActionRemovePipeline
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/runtime-environments':
    post:
      summary: 'Set runtime environments associated with given pipeline.'
      description: 'Set runtime environments associated with given pipeline.'
      operationId: pipelinesPresenterActionUpdateRuntimeEnvironments
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/validate':
    post:
      summary: 'Check if the version of the pipeline is up-to-date.'
      description: 'Check if the version of the pipeline is up-to-date.'
      operationId: pipelinesPresenterActionValidatePipeline
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
              properties:
                version:
                  description: 'Version of the pipeline.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/supplementary-files':
    get:
      summary: 'Get list of all supplementary files for a pipeline'
      description: 'Get list of all supplementary files for a pipeline'
      operationId: pipelinesPresenterActionGetSupplementaryFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Associate supplementary files with a pipeline and upload them to remote file server'
      description: 'Associate supplementary files with a pipeline and upload them to remote file server'
      operationId: pipelinesPresenterActionUploadSupplementaryFiles
      parameters:
        -
          name: id
          in: path
          description: 'identification of pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - files
              properties:
                files:
                  description: 'Identifiers of supplementary files'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/supplementary-files/{fileId}':
    delete:
      summary: 'Delete supplementary pipeline file with given id'
      description: 'Delete supplementary pipeline file with given id'
      operationId: pipelinesPresenterActionDeleteSupplementaryFile
      parameters:
        -
          name: id
          in: path
          description: 'identification of pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: fileId
          in: path
          description: 'identification of file'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/pipelines/{id}/exercises':
    get:
      summary: 'Get all exercises that use given pipeline. Only bare minimum is retrieved for each exercise (localized name and author).'
      description: 'Get all exercises that use given pipeline. Only bare minimum is retrieved for each exercise (localized name and author).'
      operationId: pipelinesPresenterActionGetPipelineExercises
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the pipeline'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/extensions/sis/status/:
    get:
      operationId: sisPresenterActionStatus
      responses:
        '200':
          description: 'Placeholder response'
  /v1/extensions/sis/terms/:
    get:
      summary: 'Get a list of all registered SIS terms'
      description: 'Get a list of all registered SIS terms'
      operationId: sisPresenterActionGetTerms
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Register a new term'
      description: 'Register a new term'
      operationId: sisPresenterActionRegisterTerm
      requestBody:
        content:
          application/json:
            schema:
              required:
                - year
                - term
              properties:
                year:
                  description: ''
                  type: string
                  nullable: true
                term:
                  description: ''
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/terms/{id}':
    post:
      summary: 'Set details of a term'
      description: 'Set details of a term'
      operationId: sisPresenterActionEditTerm
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - beginning
                - end
                - advertiseUntil
              properties:
                beginning:
                  description: ''
                  type: integer
                  example: '1740135333'
                  nullable: false
                end:
                  description: ''
                  type: integer
                  example: '1740135333'
                  nullable: false
                advertiseUntil:
                  description: ''
                  type: integer
                  example: '1740135333'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete a term'
      description: 'Delete a term'
      operationId: sisPresenterActionDeleteTerm
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/users/{userId}/subscribed-groups/{year}/{term}/as-student':
    get:
      summary: 'Get all courses subscirbed by a student and corresponding ReCodEx groups. Organizational and archived groups are filtered out from the result. Each course holds bound group IDs and group objects are returned in a separate array. Whole ancestral closure of groups is returned, so the webapp may properly assemble hiarichial group names.'
      description: 'Get all courses subscirbed by a student and corresponding ReCodEx groups. Organizational and archived groups are filtered out from the result. Each course holds bound group IDs and group objects are returned in a separate array. Whole ancestral closure of groups is returned, so the webapp may properly assemble hiarichial group names.'
      operationId: sisPresenterActionSubscribedCourses
      parameters:
        -
          name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: year
          in: path
          description: ''
          required: true
          schema:
            type: integer
            nullable: false
        -
          name: term
          in: path
          description: ''
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/users/{userId}/supervised-courses/{year}/{term}':
    get:
      summary: 'Get supervised SIS courses and corresponding ReCodEx groups. Each course holds bound group IDs and group objects are returned in a separate array. Whole ancestral closure of groups is returned, so the webapp may properly assemble hiarichial group names.'
      description: 'Get supervised SIS courses and corresponding ReCodEx groups. Each course holds bound group IDs and group objects are returned in a separate array. Whole ancestral closure of groups is returned, so the webapp may properly assemble hiarichial group names.'
      operationId: sisPresenterActionSupervisedCourses
      parameters:
        -
          name: userId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: year
          in: path
          description: ''
          required: true
          schema:
            type: integer
            nullable: false
        -
          name: term
          in: path
          description: ''
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/remote-courses/{courseId}/possible-parents':
    get:
      summary: 'Find groups that can be chosen as parents of a group created from given SIS group by current user'
      description: 'Find groups that can be chosen as parents of a group created from given SIS group by current user'
      operationId: sisPresenterActionPossibleParents
      parameters:
        -
          name: courseId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/remote-courses/{courseId}/create':
    post:
      summary: 'Create a new group based on a SIS group'
      description: 'Create a new group based on a SIS group'
      operationId: sisPresenterActionCreateGroup
      parameters:
        -
          name: courseId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - parentGroupId
              properties:
                parentGroupId:
                  description: ''
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/remote-courses/{courseId}/bind':
    post:
      summary: 'Bind an existing local group to a SIS group'
      description: 'Bind an existing local group to a SIS group'
      operationId: sisPresenterActionBindGroup
      parameters:
        -
          name: courseId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupId
              properties:
                groupId:
                  description: ''
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/sis/remote-courses/{courseId}/bindings/{groupId}':
    delete:
      summary: 'Delete a binding between a local group and a SIS group'
      description: 'Delete a binding between a local group and a SIS group'
      operationId: sisPresenterActionUnbindGroup
      parameters:
        -
          name: courseId
          in: path
          description: 'an identifier of a SIS course'
          required: true
          schema:
            type: string
            nullable: false
        -
          name: groupId
          in: path
          description: 'an identifier of a local group'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/emails:
    post:
      summary: 'Sends an email with provided subject and message to all ReCodEx users.'
      description: 'Sends an email with provided subject and message to all ReCodEx users.'
      operationId: emailsPresenterActionDefault
      requestBody:
        content:
          application/json:
            schema:
              required:
                - subject
                - message
              properties:
                subject:
                  description: 'Subject for the soon to be sent email'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                message:
                  description: 'Message which will be sent, can be html code'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/emails/supervisors:
    post:
      summary: 'Sends an email with provided subject and message to all supervisors and superadmins.'
      description: 'Sends an email with provided subject and message to all supervisors and superadmins.'
      operationId: emailsPresenterActionSendToSupervisors
      requestBody:
        content:
          application/json:
            schema:
              required:
                - subject
                - message
              properties:
                subject:
                  description: 'Subject for the soon to be sent email'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                message:
                  description: 'Message which will be sent, can be html code'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/emails/regular-users:
    post:
      summary: 'Sends an email with provided subject and message to all regular users.'
      description: 'Sends an email with provided subject and message to all regular users.'
      operationId: emailsPresenterActionSendToRegularUsers
      requestBody:
        content:
          application/json:
            schema:
              required:
                - subject
                - message
              properties:
                subject:
                  description: 'Subject for the soon to be sent email'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                message:
                  description: 'Message which will be sent, can be html code'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/emails/groups/{groupId}':
    post:
      summary: 'Sends an email with provided subject and message to regular members of given group and optionally to supervisors and admins.'
      description: 'Sends an email with provided subject and message to regular members of given group and optionally to supervisors and admins.'
      operationId: emailsPresenterActionSendToGroupMembers
      parameters:
        -
          name: groupId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - toMe
                - subject
                - message
              properties:
                toSupervisors:
                  description: 'If true, then the mail will be sent to supervisors'
                  type: boolean
                  example: 'true'
                  nullable: false
                toAdmins:
                  description: 'If the mail should be sent also to primary admins'
                  type: boolean
                  example: 'true'
                  nullable: false
                toObservers:
                  description: 'If the mail should be sent also to observers'
                  type: boolean
                  example: 'true'
                  nullable: false
                toMe:
                  description: 'User wants to also receive an email'
                  type: boolean
                  example: 'true'
                  nullable: false
                subject:
                  description: 'Subject for the soon to be sent email'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                message:
                  description: 'Message which will be sent, can be html code'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/shadow-assignments/{id}':
    get:
      summary: 'Get details of a shadow assignment'
      description: 'Get details of a shadow assignment'
      operationId: shadowAssignmentsPresenterActionDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update details of an shadow assignment'
      description: 'Update details of an shadow assignment'
      operationId: shadowAssignmentsPresenterActionUpdateDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the updated assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
                - isPublic
                - isBonus
                - localizedTexts
                - maxPoints
              properties:
                version:
                  description: 'Version of the edited assignment'
                  type: integer
                  example: '0'
                  nullable: false
                isPublic:
                  description: 'Is the assignment ready to be displayed to students?'
                  type: boolean
                  example: 'true'
                  nullable: false
                isBonus:
                  description: 'If true, the points from this exercise will not be included in overall score of group'
                  type: boolean
                  example: 'true'
                  nullable: false
                localizedTexts:
                  description: 'A description of the assignment'
                  type: array
                  items: {  }
                  nullable: false
                maxPoints:
                  description: 'A maximum of points that user can be awarded'
                  type: integer
                  example: '0'
                  nullable: false
                sendNotification:
                  description: 'If email notification should be sent'
                  type: boolean
                  example: 'true'
                  nullable: false
                deadline:
                  description: 'Deadline (only for visualization), missing value meas no deadline (same as null)'
                  type: integer
                  example: '1740135333'
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete shadow assignment'
      description: 'Delete shadow assignment'
      operationId: shadowAssignmentsPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the assignment to be removed'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/shadow-assignments:
    post:
      summary: 'Create new shadow assignment in given group.'
      description: 'Create new shadow assignment in given group.'
      operationId: shadowAssignmentsPresenterActionCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupId
              properties:
                groupId:
                  description: 'Identifier of the group'
                  type: string
                  nullable: true
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/shadow-assignments/{id}/validate':
    post:
      summary: 'Check if the version of the shadow assignment is up-to-date.'
      description: 'Check if the version of the shadow assignment is up-to-date.'
      operationId: shadowAssignmentsPresenterActionValidate
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the shadow assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
              properties:
                version:
                  description: 'Version of the shadow assignment.'
                  type: integer
                  example: '0'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/shadow-assignments/{id}/create-points':
    post:
      summary: 'Create new points for shadow assignment and user.'
      description: 'Create new points for shadow assignment and user.'
      operationId: shadowAssignmentsPresenterActionCreatePoints
      parameters:
        -
          name: id
          in: path
          description: 'Identifier of the shadow assignment'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - userId
                - points
                - note
              properties:
                userId:
                  description: 'Identifier of the user which is marked as awardee for points'
                  type: string
                  example: text
                  nullable: false
                points:
                  description: 'Number of points assigned to the user'
                  type: integer
                  example: '0'
                  nullable: false
                note:
                  description: 'Note about newly created points'
                  type: string
                  example: text
                  nullable: false
                awardedAt:
                  description: 'Datetime when the points were awarded, whatever that means'
                  type: integer
                  example: '1740135333'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/shadow-assignments/points/{pointsId}':
    post:
      summary: 'Update detail of shadow assignment points.'
      description: 'Update detail of shadow assignment points.'
      operationId: shadowAssignmentsPresenterActionUpdatePoints
      parameters:
        -
          name: pointsId
          in: path
          description: 'Identifier of the shadow assignment points'
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - points
                - note
              properties:
                points:
                  description: 'Number of points assigned to the user'
                  type: integer
                  example: '0'
                  nullable: false
                note:
                  description: 'Note about newly created points'
                  type: string
                  maxLength: 1024
                  example: text
                  nullable: false
                awardedAt:
                  description: 'Datetime when the points were awarded, whatever that means'
                  type: integer
                  example: '1740135333'
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Remove points of shadow assignment.'
      description: 'Remove points of shadow assignment.'
      operationId: shadowAssignmentsPresenterActionRemovePoints
      parameters:
        -
          name: pointsId
          in: path
          description: 'Identifier of the shadow assignment points'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/notifications:
    get:
      summary: 'Get all notifications which are currently active. If groupsIds is given returns only the ones from given groups (and their ancestors) and global ones (without group).'
      description: 'Get all notifications which are currently active. If groupsIds is given returns only the ones from given groups (and their ancestors) and global ones (without group).'
      operationId: notificationsPresenterActionDefault
      parameters:
        -
          name: groupsIds
          in: query
          description: 'identifications of groups'
          required: false
          schema:
            type: array
            items: {  }
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create notification with given attributes'
      description: 'Create notification with given attributes'
      operationId: notificationsPresenterActionCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupsIds
                - visibleFrom
                - visibleTo
                - role
                - type
                - localizedTexts
              properties:
                groupsIds:
                  description: 'Identification of groups'
                  type: array
                  items: {  }
                  nullable: false
                visibleFrom:
                  description: 'Date from which is notification visible'
                  type: integer
                  example: '1740135333'
                  nullable: false
                visibleTo:
                  description: 'Date to which is notification visible'
                  type: integer
                  example: '1740135333'
                  nullable: false
                role:
                  description: 'Users with this role and its children can see notification'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                type:
                  description: 'Type of the notification (custom)'
                  type: string
                  example: text
                  nullable: false
                localizedTexts:
                  description: 'Text of notification'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  /v1/notifications/all:
    get:
      summary: 'Get all notifications in the system.'
      description: 'Get all notifications in the system.'
      operationId: notificationsPresenterActionAll
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/notifications/{id}':
    post:
      summary: 'Update notification'
      description: 'Update notification'
      operationId: notificationsPresenterActionUpdate
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - groupsIds
                - visibleFrom
                - visibleTo
                - role
                - type
                - localizedTexts
              properties:
                groupsIds:
                  description: 'Identification of groups'
                  type: array
                  items: {  }
                  nullable: false
                visibleFrom:
                  description: 'Date from which is notification visible'
                  type: integer
                  example: '1740135333'
                  nullable: false
                visibleTo:
                  description: 'Date to which is notification visible'
                  type: integer
                  example: '1740135333'
                  nullable: false
                role:
                  description: 'Users with this role and its children can see notification'
                  type: string
                  minLength: 1
                  example: text
                  nullable: false
                type:
                  description: 'Type of the notification (custom)'
                  type: string
                  example: text
                  nullable: false
                localizedTexts:
                  description: 'Text of notification'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
    delete:
      summary: 'Delete a notification'
      description: 'Delete a notification'
      operationId: notificationsPresenterActionRemove
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/worker-files/supplementary-file/{hash}':
    get:
      summary: 'Sends over an exercise supplementary file (a data file required by the tests).'
      description: 'Sends over an exercise supplementary file (a data file required by the tests).'
      operationId: workerFilesPresenterActionDownloadSupplementaryFile
      parameters:
        -
          name: hash
          in: path
          description: 'identification of the supplementary file'
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/async-jobs/{id}':
    get:
      summary: 'Retrieves details about particular async job.'
      description: 'Retrieves details about particular async job.'
      operationId: asyncJobsPresenterActionDefault
      parameters:
        -
          name: id
          in: path
          description: 'job identifier'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/async-jobs:
    get:
      summary: 'Retrieves details about async jobs that are either pending or were recently completed.'
      description: 'Retrieves details about async jobs that are either pending or were recently completed.'
      operationId: asyncJobsPresenterActionList
      parameters:
        -
          name: ageThreshold
          in: query
          description: 'Maximal time since completion (in seconds), null = only pending operations'
          required: false
          schema:
            type: integer
            nullable: true
        -
          name: includeScheduled
          in: query
          description: 'If true, pending scheduled events will be listed as well'
          required: false
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/async-jobs/{id}/abort':
    post:
      summary: 'Retrieves details about particular async job.'
      description: 'Retrieves details about particular async job.'
      operationId: asyncJobsPresenterActionAbort
      parameters:
        -
          name: id
          in: path
          description: 'job identifier'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  /v1/async-jobs/ping:
    post:
      summary: 'Initiates ping job. An empty job designed to verify the async handler is running.'
      description: 'Initiates ping job. An empty job designed to verify the async handler is running.'
      operationId: asyncJobsPresenterActionPing
      responses:
        '200':
          description: 'Placeholder response'
  /v1/plagiarism:
    get:
      summary: 'Get a list of all batches, optionally filtered by query params.'
      description: 'Get a list of all batches, optionally filtered by query params.'
      operationId: plagiarismPresenterActionListBatches
      parameters:
        -
          name: detectionTool
          in: query
          description: 'Requests only batches created by a particular detection tool.'
          required: false
          schema:
            type: string
            maxLength: 255
            minLength: 1
            nullable: false
        -
          name: solutionId
          in: query
          description: 'Requests only batches where particular solution has detected similarities.'
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Create new detection batch record'
      description: 'Create new detection batch record'
      operationId: plagiarismPresenterActionCreateBatch
      requestBody:
        content:
          application/json:
            schema:
              required:
                - detectionTool
              properties:
                detectionTool:
                  description: 'Identifier of the external tool used to detect similarities.'
                  type: string
                  maxLength: 255
                  minLength: 1
                  example: text
                  nullable: false
                detectionToolParams:
                  description: 'Tool-specific parameters (e.g., CLI args) used for this particular batch.'
                  type: string
                  maxLength: 255
                  example: text
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/plagiarism/{id}':
    get:
      summary: 'Fetch a detail of a particular batch record.'
      description: 'Fetch a detail of a particular batch record.'
      operationId: plagiarismPresenterActionBatchDetail
      parameters:
        -
          name: id
          in: path
          description: 'Identification of the detection batch'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Update detection bath record. At the moment, only the uploadCompletedAt can be changed.'
      description: 'Update detection bath record. At the moment, only the uploadCompletedAt can be changed.'
      operationId: plagiarismPresenterActionUpdateBatch
      parameters:
        -
          name: id
          in: path
          description: 'Identification of the detection batch'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              properties:
                uploadCompleted:
                  description: 'Whether the upload of the batch data is completed or not.'
                  type: boolean
                  example: 'true'
                  nullable: false
                assignments:
                  description: "List of assignment IDs to be marked as 'checked' by this batch."
                  type: array
                  items: { type: string, pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', example: 10000000-2000-4000-8000-160000000000 }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/plagiarism/{id}/{solutionId}':
    get:
      summary: 'Retrieve detected plagiarism records from a specific batch related to one solution. Returns a list of detected similarities entities (similar file records are nested within).'
      description: 'Retrieve detected plagiarism records from a specific batch related to one solution. Returns a list of detected similarities entities (similar file records are nested within).'
      operationId: plagiarismPresenterActionGetSimilarities
      parameters:
        -
          name: id
          in: path
          description: 'Identification of the detection batch'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: solutionId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
    post:
      summary: 'Appends one detected similarity record (similarities associated with one file and one other author) into a detected batch. This division was selected to make the appends relatively small and manageable.'
      description: 'Appends one detected similarity record (similarities associated with one file and one other author) into a detected batch. This division was selected to make the appends relatively small and manageable.'
      operationId: plagiarismPresenterActionAddSimilarities
      parameters:
        -
          name: id
          in: path
          description: 'Identification of the detection batch'
          required: true
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
            nullable: false
        -
          name: solutionId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - solutionFileId
                - authorId
                - similarity
                - files
              properties:
                solutionFileId:
                  description: 'Id of the uploaded solution file.'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
                fileEntry:
                  description: 'Entry (relative path) within a ZIP package (if the uploaded file is a ZIP).'
                  type: string
                  maxLength: 255
                  example: text
                  nullable: false
                authorId:
                  description: 'Id of the author of the similar solutions/files.'
                  type: string
                  pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
                  example: 10000000-2000-4000-8000-160000000000
                  nullable: false
                similarity:
                  description: 'Relative similarity of the records associated with selected author [0-1].'
                  type: number
                  example: '0.1'
                  nullable: false
                files:
                  description: 'List of similar files and their records.'
                  type: array
                  items: {  }
                  nullable: false
              type: object
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/{extId}/{instanceId}':
    get:
      summary: 'Return URL referring to the extension with properly injected temporary JWT token.'
      description: 'Return URL referring to the extension with properly injected temporary JWT token.'
      operationId: extensionsPresenterActionUrl
      parameters:
        -
          name: extId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: instanceId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
        -
          name: locale
          in: query
          description: ''
          required: false
          schema:
            type: string
            maxLength: 2
            minLength: 2
            nullable: false
        -
          name: return
          in: query
          description: ''
          required: false
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'
  '/v1/extensions/{extId}':
    post:
      summary: 'This endpoint is used by a backend of an extension to get a proper access token (from a temp token passed via URL). It also returns details about authenticated user.'
      description: 'This endpoint is used by a backend of an extension to get a proper access token (from a temp token passed via URL). It also returns details about authenticated user.'
      operationId: extensionsPresenterActionToken
      parameters:
        -
          name: extId
          in: path
          description: ''
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Placeholder response'

